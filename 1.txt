using System;
using System.Drawing;
using System.Windows.Forms;
using SourceGrid;
using System.Data.SQLite;
namespace My_Cal
{
    partial class Form1
    {
        /// <summary>
        /// Требуется переменная конструктора.
        /// </summary>
        private System.ComponentModel.IContainer components = null;

        /// <summary>
        /// Освободить все используемые ресурсы.
        /// </summary>
        /// <param name="disposing">истинно, если управляемый ресурс должен быть удален; иначе ложно.</param>
        protected override void Dispose(bool disposing)
        {
            if (disposing && (components != null))
            {
                components.Dispose();
            }
            base.Dispose(disposing);
        }

        #region Код, автоматически созданный конструктором форм Windows

        /// <summary>
        /// Обязательный метод для поддержки конструктора - не изменяйте
        /// содержимое данного метода при помощи редактора кода.
        /// </summary>
        private void InitializeComponent()
        {
            gv1 = new GVar();
            mycontroller = new MyController();
            clickEvent = new SourceGrid.Cells.Controllers.CustomEvents();
            clickEvent.Click += new EventHandler(clickEvent_Click);
            //mycontroller = new MyController();
            //
            this.grid1 = new SourceGrid.Grid();
            this.grid2 = new SourceGrid.Grid();
            this.tabControl1 = new System.Windows.Forms.TabControl();
            this.tabPage1 = new System.Windows.Forms.TabPage();
            this.tabPage2 = new System.Windows.Forms.TabPage();
            this.tabPage3 = new System.Windows.Forms.TabPage();
            this.tabControl1.SuspendLayout();
            this.tabPage1.SuspendLayout();
            this.tabPage2.SuspendLayout();
            this.SuspendLayout();
            // 
            // grid1
            // 
            this.grid1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.grid1.EnableSort = true;
            this.grid1.Location = new System.Drawing.Point(4, 4);
            this.grid1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.grid1.Name = "grid1";
            this.grid1.OptimizeMode = SourceGrid.CellOptimizeMode.ForRows;
            this.grid1.SelectionMode = SourceGrid.GridSelectionMode.Cell;
            this.grid1.Size = new System.Drawing.Size(604, 416);
            this.grid1.TabIndex = 0;
            this.grid1.TabStop = true;
            this.grid1.ToolTipText = "";
            // 
            // grid2
            // 
            this.grid2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.grid2.EnableSort = true;
            this.grid2.Location = new System.Drawing.Point(4, 4);
            this.grid2.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.grid2.Name = "grid2";
            this.grid2.OptimizeMode = SourceGrid.CellOptimizeMode.ForRows;
            this.grid2.SelectionMode = SourceGrid.GridSelectionMode.Cell;
            this.grid2.Size = new System.Drawing.Size(604, 416);
            this.grid2.TabIndex = 0;
            this.grid2.TabStop = true;
            this.grid2.ToolTipText = "";
            // 
            // tabControl1
            // 
            this.tabControl1.Controls.Add(this.tabPage1);
            this.tabControl1.Controls.Add(this.tabPage2);
            this.tabControl1.Controls.Add(this.tabPage3);
            this.tabControl1.Location = new System.Drawing.Point(16, 15);
            this.tabControl1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.tabControl1.Name = "tabControl1";
            this.tabControl1.SelectedIndex = 0;
            this.tabControl1.Size = new System.Drawing.Size(620, 453);
            this.tabControl1.SizeMode = System.Windows.Forms.TabSizeMode.FillToRight;
            this.tabControl1.TabIndex = 1;
            // 
            // tabPage1
            // 
            this.tabPage1.Controls.Add(this.grid1);
            this.tabPage1.Location = new System.Drawing.Point(4, 25);
            this.tabPage1.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.tabPage1.Name = "tabPage1";
            this.tabPage1.Padding = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.tabPage1.Size = new System.Drawing.Size(612, 424);
            this.tabPage1.TabIndex = 0;
            this.tabPage1.Text = "tabPage1";
            this.tabPage1.UseVisualStyleBackColor = true;
            // 
            // tabPage2
            // 
            this.tabPage2.Controls.Add(this.grid2);
            this.tabPage2.Location = new System.Drawing.Point(4, 25);
            this.tabPage2.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.tabPage2.Name = "tabPage2";
            this.tabPage2.Padding = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.tabPage2.Size = new System.Drawing.Size(612, 424);
            this.tabPage2.TabIndex = 1;
            this.tabPage2.Text = "tabPage2";
            this.tabPage2.UseVisualStyleBackColor = true;
            // 
            // tabPage3
            // 
            this.tabPage3.Location = new System.Drawing.Point(4, 25);
            this.tabPage3.Name = "tabPage3";
            this.tabPage3.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage3.Size = new System.Drawing.Size(612, 424);
            this.tabPage3.TabIndex = 2;
            this.tabPage3.Text = "tabPage3";
            this.tabPage3.UseVisualStyleBackColor = true;
            this.tabPage3.Enter += new System.EventHandler(this.tabPage3_Enter);
            // 
            // Form1
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(652, 482);
            this.Controls.Add(this.tabControl1);
            this.Margin = new System.Windows.Forms.Padding(4, 4, 4, 4);
            this.Name = "Form1";
            this.Text = "Form1";
            this.Load += new System.EventHandler(this.Form1_Load);
            this.tabControl1.ResumeLayout(false);
            this.tabPage1.ResumeLayout(false);
            this.tabPage2.ResumeLayout(false);
            this.ResumeLayout(false);

        }

        
        private void DoFullTabs1()
        {
            
            //SQLiteConnection
            SQLiteConnection sqlite_conn;
            SQLiteCommand sqlite_cmd;
            SQLiteDataReader sqlite_datareader;
            sqlite_conn = new SQLiteConnection("Data Source=database.sqlite;Version=3;New=True;Compress=True;");// create a new database connection
            sqlite_conn.Open(); // open the connection:
            sqlite_cmd = sqlite_conn.CreateCommand();// create a new SQL command
            sqlite_cmd.CommandText = "SELECT * FROM external_turning";// First lets build a SQL-Query again
            sqlite_datareader = sqlite_cmd.ExecuteReader();// The SQLiteDataReader allows us to run through the result lines

            grid1.BorderStyle = BorderStyle.FixedSingle;
            grid1.Redim(14, 4);
            grid1.Rows.Insert(0);
            SourceGrid.Cells.Views.Cell viewImage = new SourceGrid.Cells.Views.Cell();
            //заголовок табл.1
            grid1[0, 0] = new SourceGrid.Cells.ColumnHeader("Наружнее точение");
            grid1[0, 0].ColumnSpan = 4;
            grid1[0, 0].View.TextAlignment = DevAge.Drawing.ContentAlignment.MiddleCenter;
            grid1[1, 0] = new SourceGrid.Cells.ColumnHeader("D, мм");
            grid1[1, 0].RowSpan = 2;
            grid1[1, 1] = new SourceGrid.Cells.ColumnHeader("Черновое");
            grid1[1, 2] = new SourceGrid.Cells.ColumnHeader("Получистовое");
            grid1[1, 3] = new SourceGrid.Cells.ColumnHeader("Чистовое");
            grid1[2, 1] = new SourceGrid.Cells.ColumnHeader("t, мм");
            grid1[2, 1].ColumnSpan = 3;
            for (int r = 3; r < 9; r++)
            {
                grid1.Rows.Insert(r);
                if (sqlite_datareader.Read())
                {
                    grid1[r, 0] = new SourceGrid.Cells.RowHeader(Convert.ToString(sqlite_datareader.GetString(0)));
                    grid1[r, 1] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(1)), typeof(float));
                    grid1[r, 2] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(2)), typeof(float));
                    grid1[r, 3] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(3)), typeof(float));
                }
                for (int c = 0; c < 4; c++) //задание свойств ячеек
                {
                    if (c != 0)
                    {
                        grid1[r, c].AddController(mycontroller);//наведение
                        grid1[r, c].AddController(clickEvent);//клик мыши
                        grid1[r, c].Editor.EnableEdit = false;
                    }
                }
            }
            sqlite_conn.Close();// We are ready, now lets cleanup and close our connection
            //растачивание
            //SQLiteConnection
            sqlite_conn = new SQLiteConnection("Data Source=database.sqlite;Version=3;New=True;Compress=True;");// create a new database connection
            sqlite_conn.Open(); // open the connection:
            sqlite_cmd = sqlite_conn.CreateCommand();// create a new SQL command
            sqlite_cmd.CommandText = "SELECT * FROM boring";// First lets build a SQL-Query again
            sqlite_datareader = sqlite_cmd.ExecuteReader();// The SQLiteDataReader allows us to run through the result lines

            grid1[9, 0] = new SourceGrid.Cells.ColumnHeader("Растачивание");
            for (int r = 11; r < 15; r++)
            {
                grid1.Rows.Insert(r);
                if (sqlite_datareader.Read())
                {
                    grid1[r, 0] = new SourceGrid.Cells.RowHeader(Convert.ToString(sqlite_datareader.GetString(0)));
                    grid1[r, 1] = new SourceGrid.Cells.Cell(" ", typeof(string));
                    grid1[r, 2] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(2)), typeof(float));
                    grid1[r, 3] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(3)), typeof(float));
                }
                for (int c = 0; c < 4; c++) //задание свойств ячеек
                {
                    if ((c != 0) & (c != 1))
                    {
                        grid1[r, c].AddController(mycontroller);//наведение
                        grid1[r, c].AddController(clickEvent);//клик мыши
                        grid1[r, c].Editor.EnableEdit = false;
                    }
                }
            }
            sqlite_conn.Close();// We are ready, now lets cleanup and close our connection
            grid1[9, 0].ColumnSpan = 4;
            grid1.AutoSizeCells();
            grid1.EnableSort = false;
            grid1.Selection.EnableMultiSelection = false;	

				 
        }
        private void DoFullTab2()
        {
            //SQLite connection
            SQLiteConnection sqlite_conn;
            SQLiteCommand sqlite_cmd;
            SQLiteDataReader sqlite_datareader;
            sqlite_conn = new SQLiteConnection("Data Source=database.sqlite;Version=3;New=True;Compress=True;");// create a new database connection
            sqlite_conn.Open(); // open the connection:
            sqlite_cmd = sqlite_conn.CreateCommand();// create a new SQL command
            sqlite_cmd.CommandText = "SELECT * FROM roughing";// First lets build a SQL-Query again
            sqlite_datareader = sqlite_cmd.ExecuteReader();// The SQLiteDataReader allows us to run through the result lines
            //
            //grid2
            //    
            grid2.BorderStyle = BorderStyle.FixedSingle;
            grid2.Redim(14, 4);
            grid2.Rows.Insert(0);
            grid2[0, 0] = new SourceGrid.Cells.ColumnHeader("Черновое точение");
            grid2[0, 0].ColumnSpan = 4;
            grid2[1, 0] = new SourceGrid.Cells.ColumnHeader("D, мм");
            grid2[1, 0].ColumnSpan = 2;
            grid2[1, 0].RowSpan = 3;
            grid2[1, 2] = new SourceGrid.Cells.ColumnHeader("Материал детали");
            grid2[1, 2].ColumnSpan = 2;
            grid2[2, 2] = new SourceGrid.Cells.ColumnHeader("Сталь углеродистая");
            grid2[2, 2].Column.Width = 40;
            grid2[2, 3] = new SourceGrid.Cells.ColumnHeader("Чугун серый");
            grid2[3, 2] = new SourceGrid.Cells.ColumnHeader("S, мм");
            grid2[3, 2].ColumnSpan = 2;
            for (int r = 4; r < 9; r++)
            {
                grid2.Rows.Insert(r);
                if (sqlite_datareader.Read())
                {
                    grid2[r, 0] = new SourceGrid.Cells.RowHeader(Convert.ToString(sqlite_datareader.GetString(0)));
                    grid2[r, 0].ColumnSpan = 2;
                    grid2[r, 2] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(1)), typeof(float));
                    grid2[r, 3] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(2)), typeof(float));
                }
                for (int c = 0; c < 4; c++) //задание свойств ячеек
                {
                    if ((c != 0) & (c != 1)) //для заголовков свойства не задаются
                    {
                        grid2[r, c].AddController(clickEvent);//клик мыши
                        grid2[r, c].AddController(mycontroller);//наведение
                        grid2[r, c].Editor.EnableEdit = false;//нередактируемые ячейки
                    }
                }
            }
            sqlite_conn.Close();// We are ready, now lets cleanup and close our connection
            sqlite_conn = new SQLiteConnection("Data Source=database.sqlite;Version=3;New=True;Compress=True;");// create a new database connection
            sqlite_conn.Open(); // open the connection:
            sqlite_cmd = sqlite_conn.CreateCommand();// create a new SQL command
            sqlite_cmd.CommandText = "SELECT * FROM finish_turning";// First lets build a SQL-Query again
            sqlite_datareader = sqlite_cmd.ExecuteReader();// The SQLiteDataReader allows us to run through the result lines

            //заголовок табл. 3
            grid2[9, 0] = new SourceGrid.Cells.ColumnHeader("Получистовое и чистовое точение");
            grid2[9, 0].ColumnSpan = 4;
            grid2[10, 0] = new SourceGrid.Cells.ColumnHeader("Шероховатость");
            grid2[10, 0].ColumnSpan = 2;
            grid2[10, 2] = new SourceGrid.Cells.ColumnHeader("Радиус при вершине, R, мм");
            grid2[10, 2].ColumnSpan = 2;
            grid2[11, 0] = new SourceGrid.Cells.ColumnHeader("Ra, мкм");
            grid2[11, 0].RowSpan = 2;
            grid2[11, 1] = new SourceGrid.Cells.ColumnHeader("Rz, мкм");
            grid2[11, 1].RowSpan = 2;
            grid2[11, 2] = new SourceGrid.Cells.ColumnHeader("<0,5");
            grid2[11, 3] = new SourceGrid.Cells.ColumnHeader(">0,5-1,0");
            grid2[12, 2] = new SourceGrid.Cells.ColumnHeader("s, мм/об");
            grid2[12, 2].ColumnSpan = 2;
            for (int r = 13; r < 19; r++)
            {
                grid2.Rows.Insert(r);
                if (sqlite_datareader.Read())
                {
                    grid2[r, 0] = new SourceGrid.Cells.RowHeader(Convert.ToString(sqlite_datareader.GetString(0)));
                    grid2[r, 1] = new SourceGrid.Cells.RowHeader(Convert.ToString(sqlite_datareader.GetString(1)));
                    grid2[r, 2] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(2)), typeof(float));
                    grid2[r, 3] = new SourceGrid.Cells.Cell(Convert.ToSingle(sqlite_datareader.GetString(3)), typeof(float));
                }
                for (int c = 0; c < 4; c++) //задание свойств ячеек
                {
                    if ((c != 0) & (c != 1)) //для заголовков свойства не задаются
                    {
                        grid2[r, c].AddController(clickEvent);//клик мыши
                        grid2[r, c].AddController(mycontroller);//наведение
                        grid2[r, c].Editor.EnableEdit = false;//нередактируемые ячейки
                    }
                }
            }
            sqlite_conn.Close();// We are ready, now lets cleanup and close our connection
            grid2.AutoSizeCells();
            grid2.EnableSort = false;
            grid2.Selection.EnableMultiSelection = false;
        }
        private void clickEvent_Click(object sender, EventArgs e)
        {
            SourceGrid.CellContext context = (SourceGrid.CellContext)sender;
            //MessageBox.Show(this, context.Position.ToString());
            if (context.Grid.Handle == grid1.Handle)
            {
                gv1.a = Convert.ToSingle (context.Value);
            }
            if (context.Grid.Handle == grid2.Handle)
            {
                gv1.b = Convert.ToSingle(context.Value);
            }
            //MessageBox.Show(Convert.ToString(gv1.a));
            //MessageBox.Show(Convert.ToString(context.Grid.Handle));
            //MessageBox.Show(Convert.ToString(grid1.Handle));
        }
        private void tabPage3_Enter(object sender, EventArgs e)
        {
            MessageBox.Show(Convert.ToString(gv1.a));
            MessageBox.Show(Convert.ToString(gv1.b));
        }
        private class MyHeader : SourceGrid.Cells.ColumnHeader
        {
            public MyHeader(object value)
                : base(value)
            {
                SourceGrid.Cells.Views.ColumnHeader view = new SourceGrid.Cells.Views.ColumnHeader();
                view.Font = new Font(FontFamily.GenericSansSerif, 10, FontStyle.Bold);
                view.TextAlignment = DevAge.Drawing.ContentAlignment.MiddleCenter;
                View = view;

                AutomaticSortEnabled = false;
            }
        }
        public class MyController :  SourceGrid.Cells.Controllers.ControllerBase
	{
	    private SourceGrid.Cells.Views.Cell cellView;
		public
        override void OnMouseEnter(SourceGrid.CellContext sender, EventArgs e)
		{
			cellView = new SourceGrid.Cells.Views.Cell();
			cellView.Background = new DevAge.Drawing.VisualElements.BackgroundSolid(Color.SkyBlue);
			sender.Cell.View = cellView;
			sender.Grid.InvalidateCell(sender.Position);

		}
		public
        override void OnMouseLeave(SourceGrid.CellContext sender, EventArgs e) 
		{
			cellView = new SourceGrid.Cells.Views.Cell();
			cellView.Background = new DevAge.Drawing.VisualElements.BackgroundSolid(Color.White);
			sender.Cell.View = cellView;
			sender.Grid.InvalidateCell(sender.Position);
		}

	}
        public class GVar
        {
            public float a;
            public float b;
        }
        #endregion

        private SourceGrid.Grid grid1;
        private TabControl tabControl1;
        private TabPage tabPage1;
        private TabPage tabPage2;
        private SourceGrid.Grid grid2;
        private GVar gv1;
        private TabPage tabPage3;
        public Form1.MyController mycontroller;
        public SourceGrid.Cells.Controllers.CustomEvents clickEvent;

    }
}

